# -*- coding: utf-8 -*-

__copyright__ = "Copyright (C) 2020 CALIL Inc."
__author__ = "Ryuuji Yoshimoto <ryuuji@calil.jp>"

"""
    BBBBBBFNNN.NNNNAAAAAAAAAAAA      27文字
          0---.----                  [NDC] 3+4桁
    ------1                          [別置記号] 最大3桁
          2999.9999------------      [NDC以外] 最大6桁
    ------3999.9999                  [別置記号]+[NDC以外]
"""

import click
import json
import re
import string

WORD_INDEX = u"*" + string.ascii_uppercase + u"アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヲンー"
CONVERT = [
    ['ァ', 'ア'],
    ['ィ', 'イ'],
    ['ゥ', 'ウ'],
    ['ェ', 'エ'],
    ['ォ', 'オ'],
    ['ッ', 'ツ'],
    ['ャ', 'ヤ'],
    ['ュ', 'ユ'],
    ['ョ', 'ヨ'],
    ['ヮ', 'ワ'],
    ['え', 'エ'],
    ['ほ', 'ホ'],
    ['ん', 'ン']
]


def word_to_index(s: str) -> str:
    """
    文字列をインデックスに変換
    :param s: 文字列
    :return: 変換後の文字列
    """
    r = ''
    for w in s:
        if w == 'x':
            r += '99'
        else:
            for n in CONVERT:
                if w == n[0]:
                    w = n[1]
                    break
            idx = WORD_INDEX.find(w)
            if idx >= 0:
                r += '%02d' % idx
            else:
                raise Exception('unknown index:' + w)
    return r


def normalize_no(before: str, nos: list, is_end: bool = False) -> str:
    """
    分類記号を正規化する
    :param before: 別置記号
    :param nos: 分類記号のリスト
    :param is_end: 終了側かどうか（定義より先を9に設定する）
    :return: 文字列
    """
    f: int = 0
    ndc: (float, None) = None
    _before: str = before.strip()
    _after: str = ''
    if len(_before) > 0:
        f += 1
    if len(nos) >= 2:
        if nos[1].strip():
            _after += nos[1].strip()
    for m in re.findall(u"^([0-9]{1,3})?(\.[0-9]*)?(.*)$", nos[0].strip()):
        _after = m[2] + _after
        if '.' in m[1]:
            if is_end and len(_after) == 0:
                ndc = float(m[0] + m[1] + '9999')
            else:
                ndc = float(m[0] + m[1])
        elif len(m[0]) > 0:
            if is_end and len(_after) == 0:
                ndc = float(f'{m[0]:9<3s}' + '.9999')
            else:
                ndc = float(f'{m[0]:0<3s}')
    if ndc is None:
        ndc = 0
        f += 2
    _ndc = f'{ndc:012.8f}'[0:8]
    _before = word_to_index(_before.ljust(3, '*')[0:3])
    _after = word_to_index(_after.ljust(6, 'x' if is_end else '*')[0:6])
    r = f'{_before}{f:01}{_ndc}{_after}'
    if len(r) != 27:
        raise Exception('error')
    return r


def normalize_no_simple(before: str, nos: list) -> str:
    """
    分類記号を正規化する
    :param before: 別置記号
    :param nos: 分類記号のリスト
    :param is_end: 終了側かどうか（定義より先を9に設定する）
    :return: 文字列
    """
    f: int = 0
    ndc: (float, None) = None
    _before: str = before.strip()
    _after: str = ''
    if len(_before) > 0:
        f += 1
    if len(nos) >= 2:
        if nos[1].strip():
            _after += nos[1].strip()
    for m in re.findall(u"^([0-9]{1,3})?(\.[0-9]*)?(.*)$", nos[0].strip()):
        _after = m[2] + _after
        if '.' in m[1]:
            ndc = float(m[0] + m[1])
        elif len(m[0]) > 0:
            ndc = float(m[0])
    if ndc is None:
        ndc = 0
        f += 2
    _ndc = f'{ndc:012.8f}'[0:8]
    _before = word_to_index(_before.ljust(3, '*')[0:3])
    _after = word_to_index(_after.ljust(6, 'x')[0:6])
    r = f'{_before}{f:01}{_ndc}{_after}'
    if len(r) != 27:
        raise Exception('error')
    return r


@click.command()
def reader():
    """
    テストデータを処理する
    """
    cnt = 0
    hit = 0
    with open('parse.json', 'rt', encoding='utf-8') as f:
        line = f.readline()
        while line:
            data = json.loads(line)
            for h in data['raw_holdings']:
                if h['library'] != u'中央図書館':
                    continue
                callno = h['callno']
                tmp = callno.split('/')
                ff = 0
                try:
                    x = normalize_no_simple(tmp[0], tmp[1:])
                    for t in tables:
                        if re.search(t['place'], h['place']):
                            if t['start'] is None:
                                print(tmp[0], tmp[1:], t['shelf'])
                                ff = 1
                            elif t['start'] <= x <= t['end']:
                                print(tmp[0], tmp[1:], t['shelf'], data['url'])
                                ff = 1
                except:
                    print(tmp[0], tmp[1:])
                    print(x)
                if ff:
                    hit += 1
                else:
                    print("nf:" + str(h))
                cnt += 1
            line = f.readline()
    print(u"%d/%d件の所蔵をチェックしました" % (hit, cnt))


rules = """
おとな5	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/000	/199
おとな6	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/200	/210
おとな6	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/220	/279
おとな6	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/302	/304
おとな7	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/211	/219
おとな7	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/280	/288
おとな7	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/290	/299
おとな7	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	B/
おとな8	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/300	/301
おとな8	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/308	/361
おとな9	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/361	/383.8
おとな10	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/383.8	/399
おとな10	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/500	/587
おとな11	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/588	/597
おとな11	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	B/000	B/999
おとな11	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/N
おとな12	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	B/
おとな13	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	B/
おとな13	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/760	/769
おとな13	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/780	/789
おとな14	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/400	/489
おとな14	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/645	/649
おとな15	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/367.7
おとな15	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/369.26
おとな15	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/493.7	/490
おとな15	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/494	/499
おとな15	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/598	/599
おとな16	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Nア	/Nタ
おとな16	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/385
おとな16	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/800	/899
おとな17	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/NN
おとな17	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Nチ	/Nワ
おとな17	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Fア
おとな17	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Eア
おとな18	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Eア	/Eカ
おとな18	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Fア	/Fカ
おとな19	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Eカ	/Eシ
おとな19	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Fカ	/Fシ
おとな20	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Eシ	/Eナ
おとな20	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Fシ	/Fナ
おとな21	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Eナ	/Eミ
おとな21	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Fナ	/Fミ
おとな22	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Eミ	/Eワ
おとな22	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/Fミ	/Fワ
おとな23	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/908
おとな23	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/912	/917
おとな23	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/918
おとな23	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/918.6
おとな23	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/920	/999
おとな24	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/901	/910.268
おとな24	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/911	/911.56
おとな24	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/600	/669
おとな25	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/670	/699
おとな25	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/701	/709
おとな26	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/710	/725
おとな27	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/726
おとな27	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/728	/730
おとな27	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/750	/752
おとな28	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/753	/759
おとな28	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/770	/777
おとな29	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/778	/779
おとな30	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/740	/749
おとな30	^一般成人書$|^参考資料$|^郷土資料$|^文庫$	/794	/799
こども1	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Nハ	/Nワ
こども2	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/200	/299
こども2	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/300	/385
こども2	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/389	/399
こども3	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/400	/486
こども4	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/487	/499
こども4	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/500	/639
こども5	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/000	/199
こども5	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/640	/899
こども6	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/386	/388
こども6	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/900	/999
こども7	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Nア	/Nエ
こども7	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Nス	/Nワ
こども8	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Nア	/Nハ
こども9	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/えほんス	/えほんモ
こども10	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/えほんク	/えほんシ
こども11	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/えほんオ	/えほんキ
こども12	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/えほんア	/えほんオ
こども12	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/えほんヤ	/えほんワ
こども12	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Fア	/Fエ
こども13	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Fオ	/Fス
こども14	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Fセ	/Fト
こども15	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Fナ	/Fニ
こども16	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Fヌ	/Fフ
こども17	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Fフ	/Fム
こども18	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/Fム	/Fワ
こども19	^児童書$|^児童参考$|^昔話絵本$|^知識絵本$|^別置絵本$|^幼児絵本$|^平和絵本$	/ライトノベル
書庫	^庫般$|^庫2$|^庫児$|^庫郷$|^庫壁$|^庫雑$

"""


def decode_tables(s: str) -> list:
    tables = []
    for params in s.splitlines():
        if params:
            p = params.strip().split('\t')
            if len(p) == 4 or len(p) == 3:
                t = p[2].split('/')
                start = normalize_no(t[0], t[1:])
                if len(p) == 4:
                    t = p[3].split('/')
                end = normalize_no(t[0], t[1:], is_end=True)
                tmp = {
                    'shelf': p[0],
                    'place': p[1],
                    'start': start,
                    'end': end
                }
                tables.append(tmp)
            elif len(p) == 2:
                tmp = {
                    'shelf': p[0],
                    'place': p[1],
                    'start': None,
                    'end': None
                }
                tables.append(tmp)
            else:
                raise Exception('error' + params)
    return tables


tables = decode_tables(rules)
if __name__ == '__main__':
    reader()
